apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion(Dependencies.compileSdk)

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion(Dependencies.targetSdk)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def locales = getLocales()
        buildConfigField "String[]", "TRANSLATION_ARRAY", "new String[]{\"" + locales.join("\",\"") + "\"}"
        resConfigs locales
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    sourceSets {
        main {
            res.srcDirs += ['build/generated/res/locale']
        }
    }
}

import groovy.xml.MarkupBuilder

import static groovy.io.FileType.DIRECTORIES

/**
 * Obtains a list of all the available locales
 * @since 20220928
 * @return A list with the language codes of the locales available.
 */
def getLocales() {
    // Initialize the list English, since it's available by default
    def list = ["en"]
    // Get all directories inside resources
    def dir = new File(projectDir, "src/main/res")
    dir.traverse(type: DIRECTORIES, maxDepth: 0) { file ->
        // Get only values directories
        def fileName = file.name
        if (!fileName.startsWith("values-")) return

        // Take only the values directories that contain strings
        def stringsFile = new File(file, "strings.xml")
        if (!stringsFile.exists()) return

        // Add to the list the locale of the strings file
        list.add(fileName.substring(fileName.indexOf('-') + 1))
    }
    // Log the available locales
    println "Supported locales: " + list.join(", ")
    // Return the built list
    return list
}

task updateLocalesConfig() {
    println 'Building locale config...'
    ext.outputDir = new File(projectDir, 'build/generated/res/locale/xml')

    doFirst {
        mkdir outputDir

        new File(outputDir, "locales_config.xml").withWriter { writer ->
            def destXml = new MarkupBuilder(new IndentPrinter(writer, "    ", true, true))
            destXml.setDoubleQuotes(true)
            def destXmlMkp = destXml.getMkp()
            destXmlMkp.xmlDeclaration(version: "1.0", encoding: "utf-8")
            destXmlMkp.comment("Generated at ${new Date()}")
            destXmlMkp.yield "\r\n"

            def locales = getLocales()
            destXml."locale-config"(['xmlns:android': "http://schemas.android.com/apk/res/android"]) {
                locales.forEach { locale ->
                    destXml."locale"("android:name": locale)
                }
            }
        }
    }
}

gradle.projectsEvaluated {
    preBuild.dependsOn('updateLocalesConfig')
}

dependencies {

    implementation Dependencies.kotlinLib
    implementation Dependencies.appCompat

    testImplementation Dependencies.jUnitApi
    testRuntimeOnly Dependencies.junitEngine
    androidTestImplementation Dependencies.androidTest
    androidTestImplementation Dependencies.androidTestCore
    androidTestImplementation Dependencies.androidTestExt
}
